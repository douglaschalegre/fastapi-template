[[source]]
url = "https://pypi.org/simple"
verify_ssl = true
name = "pypi"

[packages]
fastapi = {extras = ["all"], version = "==0.103.1"}
sqlalchemy = "==2.0.20"
psycopg2 = "==2.9.5"
requests = "==2.28.2"
python-jose = {extras = ["cryptography"], version = "==3.3.0"}
pytz = "==2023.3"
cachetools = "==5.3.1"
pyinstrument = "4.7.2"
alembic = "*"

[dev-packages]
ruff = "==0.4.1"
autopep8 = "==2.0.1"
pytest = "==7.2.1"
pytest-mock = "==3.10.0"
pytest-asyncio = "==0.20.3"
coverage = "==7.2.1"
sqlalchemy-stubs = "==0.4"
pytest-reportlog = "*"

[requires]
python_version = "3.10"

[scripts]
start = "bash -c 'export MSYS2_ENV_CONV_EXCL='*' && pip freeze  > requirements.txt && python main.py'"
lint = "bash -c 'git ls-files \"*.py\" | xargs ruff check '"
format = "bash -c 'git ls-files \"*.py\" | xargs ruff format --line-length=100 '"
test = "bash -c 'export MSYS2_ENV_CONV_EXCL='*' && export ENABLE_DB_TESTS='0' && coverage run --branch -m pytest && coverage report'"
test-db = "bash -c 'export MSYS2_ENV_CONV_EXCL='*' && export ENABLE_DB_TESTS='1' && coverage run --branch -m pytest --report-log='tests/result.log' && coverage report'"
test-html= "bash -c 'export MSYS2_ENV_CONV_EXCL='*' && export ENABLE_DB_TESTS='0' && coverage run --branch -m pytest && coverage html'"
test-db-html= "bash -c 'export MSYS2_ENV_CONV_EXCL='*' && export ENABLE_DB_TESTS='1' && coverage run --branch -m pytest && coverage html'"
generate-migrations = "alembic revision --autogenerate"
apply-migrations = "alembic upgrade head"